version: '3.8'

services:
  cohere-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: cohere-app:compose
    container_name: cohere-app
    env_file:
      - .env
    ports:
      - "3000:3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "node -e \"const http=require('http'); const req=http.get('http://localhost:3000/health',res=>{process.exit(res.statusCode===200?0:1)}); req.on('error',()=>process.exit(1));\""]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  cohere-app-dev:
    build:
      context: .
      dockerfile: Dockerfile
    image: cohere-app:dev
    container_name: cohere-app-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DEBUG=*
    env_file:
      - .env
    volumes:
      - ./:/app
      - /app/node_modules
    command: ["npm","run","start:dev"]
    restart: unless-stopped
    profiles:
      - dev
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  cohere-app-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: cohere-app:prod
    container_name: cohere-app-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    # Use top-level .env by default; production secrets should be provided by secret manager
    env_file:
      - .env
    restart: unless-stopped
    profiles:
      - prod
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

networks:
  default:
    driver: bridge